name: Docker Build, Push, and Deploy

on:
  push:
    branches:
      - main # Change to your main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Generate secrets.env
        run: |
          echo "DB_USER=${{ secrets.DB_USER }}" > secrets.env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> secrets.env
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> secrets.env
          echo "API_KEY=${{ secrets.API_KEY }}" >> secrets.env
        shell: bash

      - name: Upload secrets.env
        uses: actions/upload-artifact@v3
        with:
          name: secrets-env
          path: secrets.env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker-compose build
          docker-compose push
        env:
          DOCKER_CLI_AARCH64: docker

  deploy:
    needs: build # This job depends on the "build" job

    runs-on: self-hosted # Use your EC2 instance here

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Download secrets.env
        uses: actions/download-artifact@v3
        with:
          name: secrets-env
          path: /tmp

      - name: Install Docker
        run: |
          # Install Docker
          sudo yum update
          sudo yum install -y docker

      - name: Stop and Remove Existing Container
        run: sudo docker-compose down

      - name: Remove Old Docker Image # delete old image to save space on ec2 instance
        run: |
          # Remove the old frontend Docker image if it exists
          if [ "$(sudo docker images -aq jeffdiers/burrito-shop-frontend:latest)" ]; then
            sudo docker rmi jeffdiers/burrito-shop-frontend:latest
          fi
          # Remove the old backend Docker image if it exists
          if [ "$(sudo docker images -aq jeffdiers/burrito-shop-backend:latest)" ]; then
            sudo docker rmi jeffdiers/burrito-shop-backend:latest
          fi

      - name: Pull Docker image
        run: sudo docker-compose pull

      - name: Run Docker container
        run: |
          sudo docker-compose --env-file /tmp/secrets.env up -d
