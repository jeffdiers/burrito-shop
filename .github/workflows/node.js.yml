name: Docker Build, Push, and Deploy

on:
  push:
    branches:
      - main # Change to your main branch name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx create --use
          docker-compose build
          docker-compose push
        env:
          DOCKER_CLI_AARCH64: docker

  deploy:
    runs-on: self-hosted # Use your EC2 instance here

    env:
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      API_KEY: ${{ secrets.API_KEY }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install Docker
        run: |
          # Install Docker
          sudo yum update
          sudo yum install -y docker

      - name: Stop and Remove Existing Container
        run: sudo docker-compose down

      - name: Remove Old Docker Image # delete old image to save space on ec2 instance
        run: |
          # Remove the old frontend Docker image if it exists
          if [ "$(sudo docker images -aq jeffdiers/burrito-shop-frontend:latest)" ]; then
            sudo docker rmi jeffdiers/burrito-shop-frontend:latest
          fi
          # Remove the old backend Docker image if it exists
          if [ "$(sudo docker images -aq jeffdiers/burrito-shop-backend:latest)" ]; then
            sudo docker rmi jeffdiers/burrito-shop-backend:latest
          fi

      - name: Pull Docker image
        run: sudo docker-compose pull

      - name: Run Docker container
        run: |
          sudo docker-compose up -d
